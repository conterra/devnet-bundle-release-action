name: devnet-bundle-release-action
description: Devnet Bundle Release Action

inputs:
  nexus_id:
    description: "Nexus ID"
    required: true
  nexus_user:
    description: "Nexus User"
    required: true
  nexus_user_pw:
    description: "Nexus User Password"
    required: true
  nexus_url:
    description: "Nexus Url"
    required: true
  nexus_url_release:
    description: "Nexus Url Release"
    required: true
  nexus_url_snapshots:
    description: "Nexus Url Snapshots"
    required: true
  release_token:
    description: "Release Token"
    required: true
  git_mail:
    description: "Release Version"
    required: true
  git_user:
    description: "Next Dev Version"
    required: true
  release_version:
    description: "Release Version"
    required: true
  next_dev_version:
    description: "Next Dev Version"
    required: true
  ms_teams_webhook_uri:
    description: "MS Teams Webhook URI"
    required: true

runs:
  using: "composite"
  steps:
    - id: checkout
      uses: actions/checkout@v2
    - id: setup
      name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - id: git
      name: Set GIT username and email
      run: |
        git config --global user.email "${{ inputs.git_mail }}"
        git config --global user.name "${{ inputs.git_user }}"
      shell: bash
    - id: create_settings_xml
      name: "Create settings.xml"
      uses: whelk-io/maven-settings-xml-action@v18
      with:
        repositories: >
          [
            {
              "id": "central",
              "url": "http://central",
              "releases": {
                "enabled": "true"
              },
              "snapshots": {
                "enabled": "true"
              }
            }
          ]
        plugin_repositories: >
          [
            {
              "id": "central",
              "url": "http://central",
              "releases": {
                "enabled": "true"
              },
              "snapshots": {
                "enabled": "true"
              }
            }
          ]
        servers: >
          [
            {
              "id": "${{ inputs.nexus_id }}",
              "username": "${{ inputs.nexus_user }}",
              "password": "${{ inputs.nexus_user_pw }}"
            }
          ]
        mirrors: >
          [
            {
              "id": "${{ inputs.nexus_id }}",
              "mirrorOf": "central",
              "url": "${{ inputs.nexus_url }}"
            }
          ]
    - id: cache-node
      name: Cache node modules
      uses: actions/cache@v2
      with:
        path: |
          '**/node'
          '**/node_modules'
          ~/.m2/repository
        key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package.json') }}
    - id: write_release_versions
      name: Update versions to ${{ inputs.release_version }}
      run: |
        mvn validate -P write-release-versions -Dreplace.target.version=${{ inputs.release_version }}
        mvn versions:set -DnewVersion=${{ inputs.release_version }} -DgenerateBackupPoms=false
        mvn scm:checkin -DpushChanges=true -Dmessage="[update-version] to ${{ inputs.release_version }}" -Dscm.username=${{ inputs.git_user }} -Dscm.password=${{ inputs.release_token }}
      shell: bash
    - id: tests
      name: Run tests
      run: mvn prepare-package -Prun-js-tests,include-mapapps-deps
      shell: bash
    - id: nexus_deployment
      name: Publish to Nexus
      run: mvn deploy -Pcompress -Dmaven.test.skip.exec=true -Ddist.releases.id=${{ inputs.nexus_id }} -Ddist.releases.url=${{ inputs.nexus_url_release }} -Ddist.snapshots.id=${{ inputs.nexus_id }} -Ddist.snapshots.url=${{ inputs.nexus_url_snapshots }}
      shell: bash
    - id: project_artifact_id
      name: Extract Maven project artifactId
      run: echo ::set-output name=artifactId::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.artifactId}' --non-recursive exec:exec)
      shell: bash
    - id: release
      name: Create GitHub release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "target/${{ steps.project_artifact_id.outputs.artifactId }}-bundle.zip,target/${{ steps.project_artifact_id.outputs.artifactId }}-sample-app.zip"
        preRelease: false
        bodyFile: "RELEASE.md"
        allowUpdates: true
        replacesArtifacts: true
        tag: ${{ inputs.release_version }}
        token: ${{ inputs.release_token }}
    - id: write_dev_versions
      name: Update versions to ${{ inputs.next_dev_version }}
      run: |
        mvn validate -P write-release-versions -Dreplace.target.version=${{ inputs.next_dev_version }}
        mvn versions:set -DnewVersion=${{ inputs.next_dev_version }} -DgenerateBackupPoms=false
        mvn scm:checkin -DpushChanges=true -Dmessage="[update-version] to ${{ inputs.next_dev_version }}" -Dscm.username=${{ inputs.git_user }} -Dscm.password=${{ inputs.release_token }}
      shell: bash
    - uses: toko-bifrost/ms-teams-deploy-card@master
      if: always()
      with:
        github-token: ${{ inputs.release_token }}
        webhook-uri: ${{ inputs.ms_teams_webhook_uri }}
        show-on-start: false
        card-layout-exit: complete
        timezone: "Europe/Berlin"
        enable-view-status: false
        view-status-action-text: "View Release Status"
        review-diffs-action-text: "View Commits"
        custom-facts: |
          - name: Release Version
            value: "${{ steps.release.outputs.id }}"
        custom-actions: |
          - text: Show Release
            url: "${{ steps.release.outputs.html_url }}"
